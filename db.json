{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1477384609482},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1477384609482},{"_id":"themes/next/.gitignore","hash":"c8d6a73b9e17f0f8a3716e4ada6960d3180425a6","modified":1477384609482},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1477384609482},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1477384609482},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1477384609482},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1477384609482},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1477384609486},{"_id":"themes/next/_config.yml","hash":"83fdda115497966ac773fd8099dba5769112ed32","modified":1477385607938},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1477384609486},{"_id":"themes/next/gulpfile.coffee","hash":"d267332ec1461042fb16a9cb0737e1555fb4b79e","modified":1477384609486},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1477384609494},{"_id":"source/_posts/game-engine-development-summary.md","hash":"2dd239dd7296f19a873392fb986348c37a13820f","modified":1479886159389},{"_id":"source/_posts/github-page-vendors-404.md","hash":"d64bd718523795916bd8fc8d50932726231fd29a","modified":1478525879558},{"_id":"source/_posts/https-for-website.md","hash":"4112d82dfa674bb63ce1eec66f5b78c52375f07f","modified":1477388551378},{"_id":"source/_posts/javascript-get-class-name.md","hash":"9752ab0c331a9c1c291c8caa3ee8635dc851d260","modified":1476976006512},{"_id":"source/_posts/latex-install-guide.md","hash":"8bd25d1e91baee0886fa2e3bda782d3d38b1a037","modified":1479384507759},{"_id":"source/_posts/something-about-the-online-exam-system.md","hash":"19acc591beed7be51eb703c51dab5b16483f3fea","modified":1476976006512},{"_id":"source/_posts/tensorflow-learning-note.md","hash":"bba61902c762691c4d1c060c6adfe4d1e8f83170","modified":1479889911601},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1477384609478},{"_id":"themes/next/.git/config","hash":"c3263cd72fd2b23979b4de3fa1cd290e3f28cb33","modified":1477384609482},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1477384515595},{"_id":"themes/next/.git/index","hash":"dba5bb09aeea3bfcef4880a2a11ba41f8b94b5f2","modified":1477384609530},{"_id":"themes/next/.git/packed-refs","hash":"e31117651c0ba696618bdd42320eb8b5ada32440","modified":1477384609478},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1477384609482},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1477384609482},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1477384609486},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1477384609486},{"_id":"themes/next/languages/en.yml","hash":"63de36e9f5822084b61b03a507f6246f8f962b3f","modified":1477384609486},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1477384609486},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1477384609486},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1477384609486},{"_id":"themes/next/languages/ko.yml","hash":"ce8b047c89daae77c03482fc76f16ffec6bdbf2d","modified":1477384609486},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1477384609486},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1477384609486},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1477384609486},{"_id":"themes/next/languages/zh-Hans.yml","hash":"ed36a28104f3c185fc4a0b3e52071d0efabe168c","modified":1477384609486},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1477384609486},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1477384609486},{"_id":"themes/next/layout/_layout.swig","hash":"627aa021dd052d3700e84f8c2eeabd4e30989158","modified":1477384609486},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1477384609494},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1477384609494},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1477384609494},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1477384609494},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1477384609494},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1477384609494},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1477384609494},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1477384609494},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1477384609530},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1477384609530},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1477384609530},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477384609506},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1477384515595},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1477384515595},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1477384515595},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1477384515595},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1477384515595},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1477384515595},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1477384515595},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1477384515595},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1477384515595},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1477384515595},{"_id":"themes/next/.git/logs/HEAD","hash":"75d5838c662bce2f0cc7efa0fdc15993e00c6576","modified":1477384609478},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"bc311e9f4333188da5c9c721ae467ba14410d5b2","modified":1477384609486},{"_id":"themes/next/layout/_macro/post.swig","hash":"ea40d388ae190e2228cbe54f054be621e3fa061c","modified":1477384609486},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1477384609486},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"084867c289c95c5ebc18435a3b2092091bb8e2ba","modified":1477384609486},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1477384609486},{"_id":"themes/next/layout/_partials/comments.swig","hash":"58fd826ca75b0cbc48b61a58da4b841e2fa34403","modified":1477384609490},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1477384609490},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4fe588ff8ba8587885c2936db2df490774f89e10","modified":1477384609490},{"_id":"themes/next/layout/_partials/head.swig","hash":"06b6604176367af52587312e2575b52ecf53c3d9","modified":1477384609490},{"_id":"themes/next/layout/_partials/header.swig","hash":"eb028685cb3c329537bbced06c063d23e6a33817","modified":1477384609490},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1477384609490},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1477384609490},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1477384609490},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1477384609490},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1477384609490},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1477384609494},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1477384609494},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1477384609494},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1477384609494},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1477384609506},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1477384609506},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1477384609506},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1477384609506},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1477384609506},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1477384609506},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1477384609506},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1477384609506},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1477384609510},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1477384609510},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1477384609510},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1477384609510},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1477384609510},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1477384609510},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477384609490},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477384609490},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477384609502},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477384609502},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477384609502},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477384609506},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1477384609506},{"_id":"themes/next/.git/refs/heads/master","hash":"d36f6d651a14df9393aefd229995a965ad126eca","modified":1477384609478},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1477384609490},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1477384609490},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1477384609490},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1477384609490},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1477384609490},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1477384609490},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1477384609490},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1477384609490},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1477384609490},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1477384609490},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1477384609490},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1477384609490},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1477384609490},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"60a51a33416e2b86ac9fbefc86b80f2f5f60e1c0","modified":1477384609490},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1477384609490},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1477384609494},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1477384609494},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1477384609502},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1477384609502},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1477384609502},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1477384609506},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1477384609506},{"_id":"themes/next/source/css/_variables/base.styl","hash":"3f0d6aa424f434e82ea507f740eeff110f996269","modified":1477384609506},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1477384609510},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1477384609510},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1477384609510},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1477384609510},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1477384609510},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1477384609510},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1477384609510},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1477384609514},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1477384609514},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1477384609514},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1477384609514},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1477384609514},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1477384609514},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1477384609514},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1477384609514},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1477384609514},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1477384609522},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1477384609526},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1477384609526},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1477384609526},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1477384609526},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1477384609526},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1477384609526},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1477384609526},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1477384609526},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1477384609530},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1477384609530},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1477384609530},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1477384609526},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"75d5838c662bce2f0cc7efa0fdc15993e00c6576","modified":1477384609478},{"_id":"themes/next/.git/objects/pack/pack-26d81fcbc983244e4f41129af2ccbecd702a2e0f.idx","hash":"f66a5614f99b93c017c2eb1344b6b5ff1dac373f","modified":1477384608886},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1477384609478},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1477384609490},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1477384609490},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1477384609490},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1477384609490},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1477384609490},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1477384609490},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"3065c1bcb54da1e0018136595741341ac71ef9e7","modified":1477384609490},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1477384609490},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1477384609494},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1477384609494},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1477384609494},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1477384609494},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1477384609498},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1477384609502},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1477384609502},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1477384609502},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1477384609502},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1477384609502},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1477384609502},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1477384609502},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1477384609502},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1477384609502},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1477384609502},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1477384609502},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1477384609502},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1477384609506},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1477384609506},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1477384609506},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1477384609506},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1477384609506},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1477384609506},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1477384609506},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1477384609506},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"7b206cd8921bc042f8e37a74aea1abc8a5ec8ab4","modified":1477384609506},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1477384609506},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1477384609506},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1477384609506},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1477384609506},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1477384609514},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1477384609514},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1477384609514},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1477384609514},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1477384609514},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1477384609514},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1477384609522},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1477384609526},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1477384609526},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1477384609514},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1477384609518},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1477384609522},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1477384609530},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"75d5838c662bce2f0cc7efa0fdc15993e00c6576","modified":1477384609478},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1477384609494},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1477384609494},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1477384609494},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1477384609494},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1477384609494},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1477384609494},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1477384609494},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"d23db2f598b8eb274680023745ba6d6d466cd84a","modified":1477384609494},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1477384609498},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1477384609502},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1477384609502},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1477384609502},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1477384609502},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1477384609502},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1477384609502},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1477384609502},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1477384609502},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1477384609502},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1477384609502},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1477384609506},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1477384609506},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1477384609506},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1477384609510},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1477384609510},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1477384609522},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1477384609518},{"_id":"themes/next/.git/objects/pack/pack-26d81fcbc983244e4f41129af2ccbecd702a2e0f.pack","hash":"712e29eb8631e844a0fa1c47c433296a1afebecd","modified":1477384608886},{"_id":"public/2016/11/17/latex-install-guide/index.html","hash":"147f8a87e1d470e7bdea5b76674b010b85447c32","modified":1479905103187},{"_id":"public/2016/11/22/tensorflow-learning-note/index.html","hash":"59ff9ec432d87a604c59b578781eae1a0161c2e1","modified":1479905103194},{"_id":"public/2016/11/07/github-page-vendors-404/index.html","hash":"c23d24f8553cd7b5b6c1a2cc7f6d473d4d79918b","modified":1479905103199},{"_id":"public/2016/10/25/https-for-website/index.html","hash":"43cd8dd38ca3a24dfee7d286eed8983b383a4c88","modified":1479905103199},{"_id":"public/2016/10/13/something-about-the-online-exam-system/index.html","hash":"b57470c5b7dba4156c3c02a8e1dea7cca5e08959","modified":1479905103199},{"_id":"public/archives/index.html","hash":"a62d84d4f0e90e72260e816c935354a92b7134a7","modified":1479905103199},{"_id":"public/archives/2016/index.html","hash":"375557bc67fe217d0cce9ca45eea8255e401975d","modified":1479905103199},{"_id":"public/tags/github-page/index.html","hash":"ee17724e8beb70ccbefb1920da570e8e443ff2cf","modified":1479905103199},{"_id":"public/tags/game-enagine-javascript/index.html","hash":"02777d05137182e099d0342998b67ddfcf0adf51","modified":1479905103199},{"_id":"public/archives/2016/10/index.html","hash":"36286dd6414c7f122d482868d4beb837f9cb98e9","modified":1479905103200},{"_id":"public/tags/latex/index.html","hash":"aa4fd3d328f866e282ed222e810610fc6bb0bf5e","modified":1479905103200},{"_id":"public/tags/namecheap-https-ssl-certificate-website/index.html","hash":"07f3be5b1ac2ce3ebaae94b89a18271761cd804f","modified":1479905103200},{"_id":"public/tags/tensorflow/index.html","hash":"7d791f7ebdc2864ac5c86305bc2fdb4f46116358","modified":1479905103200},{"_id":"public/archives/2016/11/index.html","hash":"7ac4f8454dcc491b720b4011690d2da83953ff93","modified":1479905103200},{"_id":"public/2016/11/07/game-engine-development-summary/index.html","hash":"e0cf0fe120c19414ef8d2619b07b5677f8a54479","modified":1479905103200},{"_id":"public/2016/10/20/javascript-get-class-name/index.html","hash":"467a2f5202588baeb813a534f0a608cacd2989f2","modified":1479905103200},{"_id":"public/index.html","hash":"9c6b846e3c63e8749a1ac9e162de1e3f2e7a09f6","modified":1479905103200}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"微型游戏引擎开发阶段总结","date":"2016-11-07T06:05:54.000Z","_content":"\n## 前言\n写这个[小型游戏引擎](http://github.com/keifergu/flappy-bird)的目的，是为了深入学习 JavaScript ，现在功能已经有了一定的雏形，所以作一个阶段性的总结。\n\n## 架构\n系统采用分层架构，主要分为 底层工具层 、 基础类层 、 功能层。\n\n### 底层工具层\n\n1. 碰撞检测模块\n    第一次重构，这时的`碰撞检测模块`是使用`Object.assign()`追加到`Shape.prototype`里面，然后分开为两个文件。包括求多边形的所有边的向量等函数，均是使用该种方法追加到各自的图形类中。这样，虽然在文件上是分开的，但是在逻辑上，两个模块是杂揉在一起的。\n\n    第二次重构时，我的想法是使用#函数式编程#，将各个具体功能（例如求多边形的所有边的法向量）写成单独的函数，而实例对象作为参数传进去，返回计算结果，然后在主函数里面顺序调用。这样的写法能够满足对外只有#单一接口#。但是在后面我对`图形类`进行重构时，这里遇到的很大的问题。\n\n    第三次重构，因为对`图形类`进行重构时，将数据接口进行了更改，导致了`碰撞检测模块`中的大量方法需要更改，这时我的想法是将`碰撞检测模块`重构为一个可复用的模块，对外提供单一接口并确定参数格式内容。这时，我将除`Vector模块`之外的依赖删除，在函数内部创建`图形类`，当接收到外部参数时，实例化图形类，然后进行计算。同时，为了便于以后对接口进行重构，添加一个`数据转换`函数，将外部的参数格式转换为内部使用的格式，同时也起着数据格式校验的功能，在后面的处理大量`switch/case`时，也起着重要的作用。\n\n    第四次重构，此时数据格式，外部接口已经固定，但是有一个问题，`碰撞检测`需要对不同的图形进行不同的检测算法，那么需要使用`switch/case`或者`if/else`对图形的类型进行判断。但是当图形类别较多时，这里的代码会非常繁杂，及其不便于修改和扩展。这时，我想到了使用#查找表#来彻底解决这个问题。具体的做法是根据传入的图形类名构造函数名，然后动态的调用函数。可以看这个代码样例：\n\n    ```JavaScript\n    var collisionObject = {\n        polygon_circle: function(polygon, circle){\n            // 碰撞检测的主程序代码\n        },\n    }\n\n    collison(s1, s2){\n     /**\n     s1{\n        type: \"polygon\",\n        data: [Object Array]\n     }\n     s2{\n        type: \"circle\",\n        data: [Object Array]\n     }\n     **/\n     // 动态的构造参数，来确定调用的函数\n     return collisionObject[s1.type + '_' + s2.type](s1, s2);\n    }\n    ```\n\n2. 图形绘制模块\n    初始版本，此时的`图形绘制函数`是直接写在`图形类`里面的，直接调用`canvas`的接口进行绘制\n\n    第一次重构， 直接将`图形绘制函数`拆分为单一模块，对外提供统一接口。这样不管外部`图形类`如何改变，只需要将其转换为标准接口即可继续正常使用`图形绘制模块`。第二个好处是，将*数据*和*表现*分开，便于移植，也就是说如果我不在`canvas`上绘图，那么我可以直接修改`图形绘制函数`，使用目标平台的`绘制API`来实现以前的功能，而且对上层的代码没有任何影响。\n\n### 基础类层\n\n1. 图形类\n    `图形类`也经历过多次的重构，但大多数是更改数据接口。现在基本的图形基类抽象为四种，均继承与基类`Shape`：\n\n    * 点（Point）\n    * 线段（Line）\n    * 多边形（Polygon）\n    * 圆（Circle）\n\n    * 矩形（Rect），继承于`Polygon`\n    \n\n## 后记\n### 架构以及接口\n编写这个项目的过程中，有一大部分的时间都是在设计程序架构，设计接口。不断的推翻以前的设计，不断的重构。这个时候，真正的体会到，程序设计是一件需要创造力和想象力的事情，并不是简单的堆叠代码。\n\n整个项目的开发流程大概类似“原型模式”，首先使用 JavaScript 完成了一个能够运行的原型，然后拆分功能，将图形、算法、视图分开，然后尝试扩展，抽象出高级的类。再然后尝试将某些功能独立出来，使其成为一个可复用的模块。虽然最后的展现形式没有改变，但是对于日后的维护和扩展，却有着不同的难度。\n\n接口的设计，我认为这是最难的一部分。\n### 设计模式\n我认为，设计模式的使用就是为了**便于对功能进行增删改**。那么，当你在进行开发时，一直在想着如果这个需求后面改了怎么办，如果函数参数要改怎么办，如果接口要改怎么办。当你在这么想时，并且尽可能让你的代码能够从容应对这些改动需求时，你就在应用设计模式了。\n#### 接口模式的使用\n","source":"_posts/game-engine-development-summary.md","raw":"---\ntitle: 微型游戏引擎开发阶段总结\ndate: 2016-11-07 14:05:54\ntags: game-enagine javascript\n---\n\n## 前言\n写这个[小型游戏引擎](http://github.com/keifergu/flappy-bird)的目的，是为了深入学习 JavaScript ，现在功能已经有了一定的雏形，所以作一个阶段性的总结。\n\n## 架构\n系统采用分层架构，主要分为 底层工具层 、 基础类层 、 功能层。\n\n### 底层工具层\n\n1. 碰撞检测模块\n    第一次重构，这时的`碰撞检测模块`是使用`Object.assign()`追加到`Shape.prototype`里面，然后分开为两个文件。包括求多边形的所有边的向量等函数，均是使用该种方法追加到各自的图形类中。这样，虽然在文件上是分开的，但是在逻辑上，两个模块是杂揉在一起的。\n\n    第二次重构时，我的想法是使用#函数式编程#，将各个具体功能（例如求多边形的所有边的法向量）写成单独的函数，而实例对象作为参数传进去，返回计算结果，然后在主函数里面顺序调用。这样的写法能够满足对外只有#单一接口#。但是在后面我对`图形类`进行重构时，这里遇到的很大的问题。\n\n    第三次重构，因为对`图形类`进行重构时，将数据接口进行了更改，导致了`碰撞检测模块`中的大量方法需要更改，这时我的想法是将`碰撞检测模块`重构为一个可复用的模块，对外提供单一接口并确定参数格式内容。这时，我将除`Vector模块`之外的依赖删除，在函数内部创建`图形类`，当接收到外部参数时，实例化图形类，然后进行计算。同时，为了便于以后对接口进行重构，添加一个`数据转换`函数，将外部的参数格式转换为内部使用的格式，同时也起着数据格式校验的功能，在后面的处理大量`switch/case`时，也起着重要的作用。\n\n    第四次重构，此时数据格式，外部接口已经固定，但是有一个问题，`碰撞检测`需要对不同的图形进行不同的检测算法，那么需要使用`switch/case`或者`if/else`对图形的类型进行判断。但是当图形类别较多时，这里的代码会非常繁杂，及其不便于修改和扩展。这时，我想到了使用#查找表#来彻底解决这个问题。具体的做法是根据传入的图形类名构造函数名，然后动态的调用函数。可以看这个代码样例：\n\n    ```JavaScript\n    var collisionObject = {\n        polygon_circle: function(polygon, circle){\n            // 碰撞检测的主程序代码\n        },\n    }\n\n    collison(s1, s2){\n     /**\n     s1{\n        type: \"polygon\",\n        data: [Object Array]\n     }\n     s2{\n        type: \"circle\",\n        data: [Object Array]\n     }\n     **/\n     // 动态的构造参数，来确定调用的函数\n     return collisionObject[s1.type + '_' + s2.type](s1, s2);\n    }\n    ```\n\n2. 图形绘制模块\n    初始版本，此时的`图形绘制函数`是直接写在`图形类`里面的，直接调用`canvas`的接口进行绘制\n\n    第一次重构， 直接将`图形绘制函数`拆分为单一模块，对外提供统一接口。这样不管外部`图形类`如何改变，只需要将其转换为标准接口即可继续正常使用`图形绘制模块`。第二个好处是，将*数据*和*表现*分开，便于移植，也就是说如果我不在`canvas`上绘图，那么我可以直接修改`图形绘制函数`，使用目标平台的`绘制API`来实现以前的功能，而且对上层的代码没有任何影响。\n\n### 基础类层\n\n1. 图形类\n    `图形类`也经历过多次的重构，但大多数是更改数据接口。现在基本的图形基类抽象为四种，均继承与基类`Shape`：\n\n    * 点（Point）\n    * 线段（Line）\n    * 多边形（Polygon）\n    * 圆（Circle）\n\n    * 矩形（Rect），继承于`Polygon`\n    \n\n## 后记\n### 架构以及接口\n编写这个项目的过程中，有一大部分的时间都是在设计程序架构，设计接口。不断的推翻以前的设计，不断的重构。这个时候，真正的体会到，程序设计是一件需要创造力和想象力的事情，并不是简单的堆叠代码。\n\n整个项目的开发流程大概类似“原型模式”，首先使用 JavaScript 完成了一个能够运行的原型，然后拆分功能，将图形、算法、视图分开，然后尝试扩展，抽象出高级的类。再然后尝试将某些功能独立出来，使其成为一个可复用的模块。虽然最后的展现形式没有改变，但是对于日后的维护和扩展，却有着不同的难度。\n\n接口的设计，我认为这是最难的一部分。\n### 设计模式\n我认为，设计模式的使用就是为了**便于对功能进行增删改**。那么，当你在进行开发时，一直在想着如果这个需求后面改了怎么办，如果函数参数要改怎么办，如果接口要改怎么办。当你在这么想时，并且尽可能让你的代码能够从容应对这些改动需求时，你就在应用设计模式了。\n#### 接口模式的使用\n","slug":"game-engine-development-summary","published":1,"updated":"2016-11-23T07:29:19.389Z","_id":"civtkm4fr0000wajxr861zpgq","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>写这个<a href=\"http://github.com/keifergu/flappy-bird\" target=\"_blank\" rel=\"external\">小型游戏引擎</a>的目的，是为了深入学习 JavaScript ，现在功能已经有了一定的雏形，所以作一个阶段性的总结。</p>\n<h2 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h2><p>系统采用分层架构，主要分为 底层工具层 、 基础类层 、 功能层。</p>\n<h3 id=\"底层工具层\"><a href=\"#底层工具层\" class=\"headerlink\" title=\"底层工具层\"></a>底层工具层</h3><ol>\n<li><p>碰撞检测模块<br> 第一次重构，这时的<code>碰撞检测模块</code>是使用<code>Object.assign()</code>追加到<code>Shape.prototype</code>里面，然后分开为两个文件。包括求多边形的所有边的向量等函数，均是使用该种方法追加到各自的图形类中。这样，虽然在文件上是分开的，但是在逻辑上，两个模块是杂揉在一起的。</p>\n<p> 第二次重构时，我的想法是使用#函数式编程#，将各个具体功能（例如求多边形的所有边的法向量）写成单独的函数，而实例对象作为参数传进去，返回计算结果，然后在主函数里面顺序调用。这样的写法能够满足对外只有#单一接口#。但是在后面我对<code>图形类</code>进行重构时，这里遇到的很大的问题。</p>\n<p> 第三次重构，因为对<code>图形类</code>进行重构时，将数据接口进行了更改，导致了<code>碰撞检测模块</code>中的大量方法需要更改，这时我的想法是将<code>碰撞检测模块</code>重构为一个可复用的模块，对外提供单一接口并确定参数格式内容。这时，我将除<code>Vector模块</code>之外的依赖删除，在函数内部创建<code>图形类</code>，当接收到外部参数时，实例化图形类，然后进行计算。同时，为了便于以后对接口进行重构，添加一个<code>数据转换</code>函数，将外部的参数格式转换为内部使用的格式，同时也起着数据格式校验的功能，在后面的处理大量<code>switch/case</code>时，也起着重要的作用。</p>\n<p> 第四次重构，此时数据格式，外部接口已经固定，但是有一个问题，<code>碰撞检测</code>需要对不同的图形进行不同的检测算法，那么需要使用<code>switch/case</code>或者<code>if/else</code>对图形的类型进行判断。但是当图形类别较多时，这里的代码会非常繁杂，及其不便于修改和扩展。这时，我想到了使用#查找表#来彻底解决这个问题。具体的做法是根据传入的图形类名构造函数名，然后动态的调用函数。可以看这个代码样例：</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> collisionObject = &#123;</div><div class=\"line\">    <span class=\"attr\">polygon_circle</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">polygon, circle</span>)</span>&#123;</div><div class=\"line\">        <span class=\"comment\">// 碰撞检测的主程序代码</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">collison(s1, s2)&#123;</div><div class=\"line\"> <span class=\"comment\">/**</span></div><div class=\"line\"> s1&#123;</div><div class=\"line\">    type: \"polygon\",</div><div class=\"line\">    data: [Object Array]</div><div class=\"line\"> &#125;</div><div class=\"line\"> s2&#123;</div><div class=\"line\">    type: \"circle\",</div><div class=\"line\">    data: [Object Array]</div><div class=\"line\"> &#125;</div><div class=\"line\"> **/</div><div class=\"line\"> <span class=\"comment\">// 动态的构造参数，来确定调用的函数</span></div><div class=\"line\"> <span class=\"keyword\">return</span> collisionObject[s1.type + <span class=\"string\">'_'</span> + s2.type](s1, s2);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>图形绘制模块<br> 初始版本，此时的<code>图形绘制函数</code>是直接写在<code>图形类</code>里面的，直接调用<code>canvas</code>的接口进行绘制</p>\n<p> 第一次重构， 直接将<code>图形绘制函数</code>拆分为单一模块，对外提供统一接口。这样不管外部<code>图形类</code>如何改变，只需要将其转换为标准接口即可继续正常使用<code>图形绘制模块</code>。第二个好处是，将<em>数据</em>和<em>表现</em>分开，便于移植，也就是说如果我不在<code>canvas</code>上绘图，那么我可以直接修改<code>图形绘制函数</code>，使用目标平台的<code>绘制API</code>来实现以前的功能，而且对上层的代码没有任何影响。</p>\n</li>\n</ol>\n<h3 id=\"基础类层\"><a href=\"#基础类层\" class=\"headerlink\" title=\"基础类层\"></a>基础类层</h3><ol>\n<li><p>图形类<br> <code>图形类</code>也经历过多次的重构，但大多数是更改数据接口。现在基本的图形基类抽象为四种，均继承与基类<code>Shape</code>：</p>\n<ul>\n<li>点（Point）</li>\n<li>线段（Line）</li>\n<li>多边形（Polygon）</li>\n<li><p>圆（Circle）</p>\n</li>\n<li><p>矩形（Rect），继承于<code>Polygon</code></p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><h3 id=\"架构以及接口\"><a href=\"#架构以及接口\" class=\"headerlink\" title=\"架构以及接口\"></a>架构以及接口</h3><p>编写这个项目的过程中，有一大部分的时间都是在设计程序架构，设计接口。不断的推翻以前的设计，不断的重构。这个时候，真正的体会到，程序设计是一件需要创造力和想象力的事情，并不是简单的堆叠代码。</p>\n<p>整个项目的开发流程大概类似“原型模式”，首先使用 JavaScript 完成了一个能够运行的原型，然后拆分功能，将图形、算法、视图分开，然后尝试扩展，抽象出高级的类。再然后尝试将某些功能独立出来，使其成为一个可复用的模块。虽然最后的展现形式没有改变，但是对于日后的维护和扩展，却有着不同的难度。</p>\n<p>接口的设计，我认为这是最难的一部分。</p>\n<h3 id=\"设计模式\"><a href=\"#设计模式\" class=\"headerlink\" title=\"设计模式\"></a>设计模式</h3><p>我认为，设计模式的使用就是为了<strong>便于对功能进行增删改</strong>。那么，当你在进行开发时，一直在想着如果这个需求后面改了怎么办，如果函数参数要改怎么办，如果接口要改怎么办。当你在这么想时，并且尽可能让你的代码能够从容应对这些改动需求时，你就在应用设计模式了。</p>\n<h4 id=\"接口模式的使用\"><a href=\"#接口模式的使用\" class=\"headerlink\" title=\"接口模式的使用\"></a>接口模式的使用</h4>","excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>写这个<a href=\"http://github.com/keifergu/flappy-bird\">小型游戏引擎</a>的目的，是为了深入学习 JavaScript ，现在功能已经有了一定的雏形，所以作一个阶段性的总结。</p>\n<h2 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h2><p>系统采用分层架构，主要分为 底层工具层 、 基础类层 、 功能层。</p>\n<h3 id=\"底层工具层\"><a href=\"#底层工具层\" class=\"headerlink\" title=\"底层工具层\"></a>底层工具层</h3><ol>\n<li><p>碰撞检测模块<br> 第一次重构，这时的<code>碰撞检测模块</code>是使用<code>Object.assign()</code>追加到<code>Shape.prototype</code>里面，然后分开为两个文件。包括求多边形的所有边的向量等函数，均是使用该种方法追加到各自的图形类中。这样，虽然在文件上是分开的，但是在逻辑上，两个模块是杂揉在一起的。</p>\n<p> 第二次重构时，我的想法是使用#函数式编程#，将各个具体功能（例如求多边形的所有边的法向量）写成单独的函数，而实例对象作为参数传进去，返回计算结果，然后在主函数里面顺序调用。这样的写法能够满足对外只有#单一接口#。但是在后面我对<code>图形类</code>进行重构时，这里遇到的很大的问题。</p>\n<p> 第三次重构，因为对<code>图形类</code>进行重构时，将数据接口进行了更改，导致了<code>碰撞检测模块</code>中的大量方法需要更改，这时我的想法是将<code>碰撞检测模块</code>重构为一个可复用的模块，对外提供单一接口并确定参数格式内容。这时，我将除<code>Vector模块</code>之外的依赖删除，在函数内部创建<code>图形类</code>，当接收到外部参数时，实例化图形类，然后进行计算。同时，为了便于以后对接口进行重构，添加一个<code>数据转换</code>函数，将外部的参数格式转换为内部使用的格式，同时也起着数据格式校验的功能，在后面的处理大量<code>switch/case</code>时，也起着重要的作用。</p>\n<p> 第四次重构，此时数据格式，外部接口已经固定，但是有一个问题，<code>碰撞检测</code>需要对不同的图形进行不同的检测算法，那么需要使用<code>switch/case</code>或者<code>if/else</code>对图形的类型进行判断。但是当图形类别较多时，这里的代码会非常繁杂，及其不便于修改和扩展。这时，我想到了使用#查找表#来彻底解决这个问题。具体的做法是根据传入的图形类名构造函数名，然后动态的调用函数。可以看这个代码样例：</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> collisionObject = &#123;</div><div class=\"line\">    <span class=\"attr\">polygon_circle</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">polygon, circle</span>)</span>&#123;</div><div class=\"line\">        <span class=\"comment\">// 碰撞检测的主程序代码</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">collison(s1, s2)&#123;</div><div class=\"line\"> <span class=\"comment\">/**</div><div class=\"line\"> s1&#123;</div><div class=\"line\">    type: \"polygon\",</div><div class=\"line\">    data: [Object Array]</div><div class=\"line\"> &#125;</div><div class=\"line\"> s2&#123;</div><div class=\"line\">    type: \"circle\",</div><div class=\"line\">    data: [Object Array]</div><div class=\"line\"> &#125;</div><div class=\"line\"> **/</span></div><div class=\"line\"> <span class=\"comment\">// 动态的构造参数，来确定调用的函数</span></div><div class=\"line\"> <span class=\"keyword\">return</span> collisionObject[s1.type + <span class=\"string\">'_'</span> + s2.type](s1, s2);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>图形绘制模块<br> 初始版本，此时的<code>图形绘制函数</code>是直接写在<code>图形类</code>里面的，直接调用<code>canvas</code>的接口进行绘制</p>\n<p> 第一次重构， 直接将<code>图形绘制函数</code>拆分为单一模块，对外提供统一接口。这样不管外部<code>图形类</code>如何改变，只需要将其转换为标准接口即可继续正常使用<code>图形绘制模块</code>。第二个好处是，将<em>数据</em>和<em>表现</em>分开，便于移植，也就是说如果我不在<code>canvas</code>上绘图，那么我可以直接修改<code>图形绘制函数</code>，使用目标平台的<code>绘制API</code>来实现以前的功能，而且对上层的代码没有任何影响。</p>\n</li>\n</ol>\n<h3 id=\"基础类层\"><a href=\"#基础类层\" class=\"headerlink\" title=\"基础类层\"></a>基础类层</h3><ol>\n<li><p>图形类<br> <code>图形类</code>也经历过多次的重构，但大多数是更改数据接口。现在基本的图形基类抽象为四种，均继承与基类<code>Shape</code>：</p>\n<ul>\n<li>点（Point）</li>\n<li>线段（Line）</li>\n<li>多边形（Polygon）</li>\n<li><p>圆（Circle）</p>\n</li>\n<li><p>矩形（Rect），继承于<code>Polygon</code></p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><h3 id=\"架构以及接口\"><a href=\"#架构以及接口\" class=\"headerlink\" title=\"架构以及接口\"></a>架构以及接口</h3><p>编写这个项目的过程中，有一大部分的时间都是在设计程序架构，设计接口。不断的推翻以前的设计，不断的重构。这个时候，真正的体会到，程序设计是一件需要创造力和想象力的事情，并不是简单的堆叠代码。</p>\n<p>整个项目的开发流程大概类似“原型模式”，首先使用 JavaScript 完成了一个能够运行的原型，然后拆分功能，将图形、算法、视图分开，然后尝试扩展，抽象出高级的类。再然后尝试将某些功能独立出来，使其成为一个可复用的模块。虽然最后的展现形式没有改变，但是对于日后的维护和扩展，却有着不同的难度。</p>\n<p>接口的设计，我认为这是最难的一部分。</p>\n<h3 id=\"设计模式\"><a href=\"#设计模式\" class=\"headerlink\" title=\"设计模式\"></a>设计模式</h3><p>我认为，设计模式的使用就是为了<strong>便于对功能进行增删改</strong>。那么，当你在进行开发时，一直在想着如果这个需求后面改了怎么办，如果函数参数要改怎么办，如果接口要改怎么办。当你在这么想时，并且尽可能让你的代码能够从容应对这些改动需求时，你就在应用设计模式了。</p>\n<h4 id=\"接口模式的使用\"><a href=\"#接口模式的使用\" class=\"headerlink\" title=\"接口模式的使用\"></a>接口模式的使用</h4>"},{"title":"关于 Github Page 的 Vendors 文件夹无法访问的问题","date":"2016-11-07T13:18:41.000Z","_content":"\n主要原因是 Github Page 升级到了`Jekyll 3.3`，可以看[官方更新文章](https://github.com/blog/2277-what-s-new-in-github-pages-with-jekyll-3-3),而新版本的 Jekyll 会忽略`/vendor`和`/node_modules`文件夹，所以导致了我们的博客访问不正常。\n\n![官方回复](/images/gitpage-vendor.png)\n\n解决办法是在网站根目录下面新建一个空白`.nojekyll`文件。","source":"_posts/github-page-vendors-404.md","raw":"---\ntitle: 关于 Github Page 的 Vendors 文件夹无法访问的问题\ndate: 2016-11-07 21:18:41\ntags: github page\n---\n\n主要原因是 Github Page 升级到了`Jekyll 3.3`，可以看[官方更新文章](https://github.com/blog/2277-what-s-new-in-github-pages-with-jekyll-3-3),而新版本的 Jekyll 会忽略`/vendor`和`/node_modules`文件夹，所以导致了我们的博客访问不正常。\n\n![官方回复](/images/gitpage-vendor.png)\n\n解决办法是在网站根目录下面新建一个空白`.nojekyll`文件。","slug":"github-page-vendors-404","published":1,"updated":"2016-11-07T13:37:59.558Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civtkm4g30001wajxtdf4k0dl","content":"<p>主要原因是 Github Page 升级到了<code>Jekyll 3.3</code>，可以看<a href=\"https://github.com/blog/2277-what-s-new-in-github-pages-with-jekyll-3-3\" target=\"_blank\" rel=\"external\">官方更新文章</a>,而新版本的 Jekyll 会忽略<code>/vendor</code>和<code>/node_modules</code>文件夹，所以导致了我们的博客访问不正常。</p>\n<p><img src=\"/images/gitpage-vendor.png\" alt=\"官方回复\"></p>\n<p>解决办法是在网站根目录下面新建一个空白<code>.nojekyll</code>文件。</p>\n","excerpt":"","more":"<p>主要原因是 Github Page 升级到了<code>Jekyll 3.3</code>，可以看<a href=\"https://github.com/blog/2277-what-s-new-in-github-pages-with-jekyll-3-3\">官方更新文章</a>,而新版本的 Jekyll 会忽略<code>/vendor</code>和<code>/node_modules</code>文件夹，所以导致了我们的博客访问不正常。</p>\n<p><img src=\"/images/gitpage-vendor.png\" alt=\"官方回复\"></p>\n<p>解决办法是在网站根目录下面新建一个空白<code>.nojekyll</code>文件。</p>\n"},{"title":"为网站启用https服务的流程步骤","date":"2016-10-25T08:12:07.000Z","_content":"以使用GitHub Education Pack提供的学生优惠为例，解释下如何为个人网站启用https服务。\n\n首先使用学生优惠，在namecheap注册域名，购买一年的ssl服务。\n\n#### 1. 生成CSR文件\n首先你需要生成自己私钥文件和CSR文件，在服务器输入以下命令：\n\n`openssl req -new -newkey rsa:2048 -nodes -keyout server.key -out server.csr`\n\n你可以将其中的\"server\"替换为你自己的域名，然后你需要输入一些信息来生成`csr`文件和`key`文件。\n\n```bash\nCountry Name (2 letter code) [AU]:CN\nState or Province Name (full name) [Some-State]:Beijing\nLocality Name (eg, city) []:Beijing\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:NA\nOrganizational Unit Name (eg, section) []:NA\nCommon Name (e.g. server FQDN or YOUR name) []:keifergu.me\nEmail Address []:keifergu@gmail.com\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:\nAn optional company name []:\n```\n其中最重要的两个信息是`Common Name`和`Email Address`。\n- `Common  Name`：需要输入域名，根据不同的公司提供的不同服务，这里可以签名的域名类型也不同，建议输入你需要启用ssl服务的域名。\n- `Email Adress`：联系邮箱，最后的证书文件则会发送到该邮箱上。\n\n完成之后可以在当前目录下面看到`server.csr`和`server.key`文件。\n\n#### 2.配置ssl服务\n\n找到你的服务商的ssl服务配置面板，neamcheap\n\n#### 3.安装证书，使用https\n\n#### 4.其他","source":"_posts/https-for-website.md","raw":"---\ntitle: 为网站启用https服务的流程步骤\ndate: 2016-10-25 16:12:07\ntags: namecheap https ssl certificate website\n---\n以使用GitHub Education Pack提供的学生优惠为例，解释下如何为个人网站启用https服务。\n\n首先使用学生优惠，在namecheap注册域名，购买一年的ssl服务。\n\n#### 1. 生成CSR文件\n首先你需要生成自己私钥文件和CSR文件，在服务器输入以下命令：\n\n`openssl req -new -newkey rsa:2048 -nodes -keyout server.key -out server.csr`\n\n你可以将其中的\"server\"替换为你自己的域名，然后你需要输入一些信息来生成`csr`文件和`key`文件。\n\n```bash\nCountry Name (2 letter code) [AU]:CN\nState or Province Name (full name) [Some-State]:Beijing\nLocality Name (eg, city) []:Beijing\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:NA\nOrganizational Unit Name (eg, section) []:NA\nCommon Name (e.g. server FQDN or YOUR name) []:keifergu.me\nEmail Address []:keifergu@gmail.com\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:\nAn optional company name []:\n```\n其中最重要的两个信息是`Common Name`和`Email Address`。\n- `Common  Name`：需要输入域名，根据不同的公司提供的不同服务，这里可以签名的域名类型也不同，建议输入你需要启用ssl服务的域名。\n- `Email Adress`：联系邮箱，最后的证书文件则会发送到该邮箱上。\n\n完成之后可以在当前目录下面看到`server.csr`和`server.key`文件。\n\n#### 2.配置ssl服务\n\n找到你的服务商的ssl服务配置面板，neamcheap\n\n#### 3.安装证书，使用https\n\n#### 4.其他","slug":"https-for-website","published":1,"updated":"2016-10-25T09:42:31.378Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civtkm4gf0003wajxwv618iz7","content":"<p>以使用GitHub Education Pack提供的学生优惠为例，解释下如何为个人网站启用https服务。</p>\n<p>首先使用学生优惠，在namecheap注册域名，购买一年的ssl服务。</p>\n<h4 id=\"1-生成CSR文件\"><a href=\"#1-生成CSR文件\" class=\"headerlink\" title=\"1. 生成CSR文件\"></a>1. 生成CSR文件</h4><p>首先你需要生成自己私钥文件和CSR文件，在服务器输入以下命令：</p>\n<p><code>openssl req -new -newkey rsa:2048 -nodes -keyout server.key -out server.csr</code></p>\n<p>你可以将其中的”server”替换为你自己的域名，然后你需要输入一些信息来生成<code>csr</code>文件和<code>key</code>文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">Country Name (2 letter code) [AU]:CN</div><div class=\"line\">State or Province Name (full name) [Some-State]:Beijing</div><div class=\"line\">Locality Name (eg, city) []:Beijing</div><div class=\"line\">Organization Name (eg, company) [Internet Widgits Pty Ltd]:NA</div><div class=\"line\">Organizational Unit Name (eg, section) []:NA</div><div class=\"line\">Common Name (e.g. server FQDN or YOUR name) []:keifergu.me</div><div class=\"line\">Email Address []:keifergu@gmail.com</div><div class=\"line\"></div><div class=\"line\">Please enter the following <span class=\"string\">'extra'</span> attributes</div><div class=\"line\">to be sent with your certificate request</div><div class=\"line\">A challenge password []:</div><div class=\"line\">An optional company name []:</div></pre></td></tr></table></figure>\n<p>其中最重要的两个信息是<code>Common Name</code>和<code>Email Address</code>。</p>\n<ul>\n<li><code>Common  Name</code>：需要输入域名，根据不同的公司提供的不同服务，这里可以签名的域名类型也不同，建议输入你需要启用ssl服务的域名。</li>\n<li><code>Email Adress</code>：联系邮箱，最后的证书文件则会发送到该邮箱上。</li>\n</ul>\n<p>完成之后可以在当前目录下面看到<code>server.csr</code>和<code>server.key</code>文件。</p>\n<h4 id=\"2-配置ssl服务\"><a href=\"#2-配置ssl服务\" class=\"headerlink\" title=\"2.配置ssl服务\"></a>2.配置ssl服务</h4><p>找到你的服务商的ssl服务配置面板，neamcheap</p>\n<h4 id=\"3-安装证书，使用https\"><a href=\"#3-安装证书，使用https\" class=\"headerlink\" title=\"3.安装证书，使用https\"></a>3.安装证书，使用https</h4><h4 id=\"4-其他\"><a href=\"#4-其他\" class=\"headerlink\" title=\"4.其他\"></a>4.其他</h4>","excerpt":"","more":"<p>以使用GitHub Education Pack提供的学生优惠为例，解释下如何为个人网站启用https服务。</p>\n<p>首先使用学生优惠，在namecheap注册域名，购买一年的ssl服务。</p>\n<h4 id=\"1-生成CSR文件\"><a href=\"#1-生成CSR文件\" class=\"headerlink\" title=\"1. 生成CSR文件\"></a>1. 生成CSR文件</h4><p>首先你需要生成自己私钥文件和CSR文件，在服务器输入以下命令：</p>\n<p><code>openssl req -new -newkey rsa:2048 -nodes -keyout server.key -out server.csr</code></p>\n<p>你可以将其中的”server”替换为你自己的域名，然后你需要输入一些信息来生成<code>csr</code>文件和<code>key</code>文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">Country Name (2 letter code) [AU]:CN</div><div class=\"line\">State or Province Name (full name) [Some-State]:Beijing</div><div class=\"line\">Locality Name (eg, city) []:Beijing</div><div class=\"line\">Organization Name (eg, company) [Internet Widgits Pty Ltd]:NA</div><div class=\"line\">Organizational Unit Name (eg, section) []:NA</div><div class=\"line\">Common Name (e.g. server FQDN or YOUR name) []:keifergu.me</div><div class=\"line\">Email Address []:keifergu@gmail.com</div><div class=\"line\"></div><div class=\"line\">Please enter the following <span class=\"string\">'extra'</span> attributes</div><div class=\"line\">to be sent with your certificate request</div><div class=\"line\">A challenge password []:</div><div class=\"line\">An optional company name []:</div></pre></td></tr></table></figure>\n<p>其中最重要的两个信息是<code>Common Name</code>和<code>Email Address</code>。</p>\n<ul>\n<li><code>Common  Name</code>：需要输入域名，根据不同的公司提供的不同服务，这里可以签名的域名类型也不同，建议输入你需要启用ssl服务的域名。</li>\n<li><code>Email Adress</code>：联系邮箱，最后的证书文件则会发送到该邮箱上。</li>\n</ul>\n<p>完成之后可以在当前目录下面看到<code>server.csr</code>和<code>server.key</code>文件。</p>\n<h4 id=\"2-配置ssl服务\"><a href=\"#2-配置ssl服务\" class=\"headerlink\" title=\"2.配置ssl服务\"></a>2.配置ssl服务</h4><p>找到你的服务商的ssl服务配置面板，neamcheap</p>\n<h4 id=\"3-安装证书，使用https\"><a href=\"#3-安装证书，使用https\" class=\"headerlink\" title=\"3.安装证书，使用https\"></a>3.安装证书，使用https</h4><h4 id=\"4-其他\"><a href=\"#4-其他\" class=\"headerlink\" title=\"4.其他\"></a>4.其他</h4>"},{"title":"在Javascript中获取class的类型名的方法","date":"2016-10-20T13:29:38.000Z","_content":"\n在Javascript中获取class的类型名主要有以下几种方法：\n1. `Function.name`\n在JS中`class`的类型名是由`constructor`的函数名决定的，那么我们可以直接调用`constructor.name`获取到类型名，这个方法不管是对通过`new`新建的实例还是`class`对象都能适用\n```javascript\nclass Polygon {\n    constructor(){\n        this.x = 1;\n    }\n\n    say() {\n        console.log(this.constructor.name); //Polygon\n    }\n}\n\nlet p = new Polygon();\nconsole.log(p.constructor.name); //Polygon\n```\n2. `class.name`\n由于`class`本质只是函数的一层包装，也就是跟我们以前使用构造函数写类本质是一样的，所以我们可以直接使用`class.name`获取到类型名，但是对使用`new`新建的实例没用：\n```javascript\nclass Polygon {\n    constructor(){\n    }\n}\nconsole.log(Polygon.name); //Polygon\n```\n3. `toString`与正则表达式\n因为现在`Function.name`还不是正式的标准，MDN不推荐在生产环境使用，详见[Function.name](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/name)，所以在较低的版本最好的办法是使用`Function.toString()`,然后使用正则表达式匹配在`function`后面的字符。\n```javascript\nfunction Polygon() {\n    this.x = 1;\n}\nclass Circle {\n    constructor() {\n    }\n}\nvar nameFromToStringRegex = /^function\\s?([^\\s(]*)/;\nvar funName = Polygon.toString().match(nameFromToStringRegex)[1];\nconsole.log(funName); //Polygon\nvar className = Circle.constructor.toString().match(nameFromToStringRegex)[1];\nconsole.log(className);\n```\n4. 通用的方法\n适用与`function`与`class`的类名，函数名的获取。\n摘自[stackoverflow](http://stackoverflow.com/questions/3178892/get-function-name-in-javascript)：\n```javascript\n/**\n * Gets the classname of an object or function if it can.  Otherwise returns the provided default.\n *\n * Getting the name of a function is not a standard feature, so while this will work in many\n * cases, it should not be relied upon except for informational messages (e.g. logging and Error\n * messages).\n *\n * @private\n */\nfunction className(object, defaultName) {\n    var nameFromToStringRegex = /^function\\s?([^\\s(]*)/;\n    var result = \"\";\n    if (typeof object === 'function') {\n        result = object.name || object.toString().match(nameFromToStringRegex)[1];\n    } else if (typeof object.constructor === 'function') {\n        result = className(object.constructor, defaultName);\n    }\n    return result || defaultName;\n}\n```","source":"_posts/javascript-get-class-name.md","raw":"---\ntitle: 在Javascript中获取class的类型名的方法\ndate: 2016-10-20 21:29:38\ntags:\n---\n\n在Javascript中获取class的类型名主要有以下几种方法：\n1. `Function.name`\n在JS中`class`的类型名是由`constructor`的函数名决定的，那么我们可以直接调用`constructor.name`获取到类型名，这个方法不管是对通过`new`新建的实例还是`class`对象都能适用\n```javascript\nclass Polygon {\n    constructor(){\n        this.x = 1;\n    }\n\n    say() {\n        console.log(this.constructor.name); //Polygon\n    }\n}\n\nlet p = new Polygon();\nconsole.log(p.constructor.name); //Polygon\n```\n2. `class.name`\n由于`class`本质只是函数的一层包装，也就是跟我们以前使用构造函数写类本质是一样的，所以我们可以直接使用`class.name`获取到类型名，但是对使用`new`新建的实例没用：\n```javascript\nclass Polygon {\n    constructor(){\n    }\n}\nconsole.log(Polygon.name); //Polygon\n```\n3. `toString`与正则表达式\n因为现在`Function.name`还不是正式的标准，MDN不推荐在生产环境使用，详见[Function.name](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/name)，所以在较低的版本最好的办法是使用`Function.toString()`,然后使用正则表达式匹配在`function`后面的字符。\n```javascript\nfunction Polygon() {\n    this.x = 1;\n}\nclass Circle {\n    constructor() {\n    }\n}\nvar nameFromToStringRegex = /^function\\s?([^\\s(]*)/;\nvar funName = Polygon.toString().match(nameFromToStringRegex)[1];\nconsole.log(funName); //Polygon\nvar className = Circle.constructor.toString().match(nameFromToStringRegex)[1];\nconsole.log(className);\n```\n4. 通用的方法\n适用与`function`与`class`的类名，函数名的获取。\n摘自[stackoverflow](http://stackoverflow.com/questions/3178892/get-function-name-in-javascript)：\n```javascript\n/**\n * Gets the classname of an object or function if it can.  Otherwise returns the provided default.\n *\n * Getting the name of a function is not a standard feature, so while this will work in many\n * cases, it should not be relied upon except for informational messages (e.g. logging and Error\n * messages).\n *\n * @private\n */\nfunction className(object, defaultName) {\n    var nameFromToStringRegex = /^function\\s?([^\\s(]*)/;\n    var result = \"\";\n    if (typeof object === 'function') {\n        result = object.name || object.toString().match(nameFromToStringRegex)[1];\n    } else if (typeof object.constructor === 'function') {\n        result = className(object.constructor, defaultName);\n    }\n    return result || defaultName;\n}\n```","slug":"javascript-get-class-name","published":1,"updated":"2016-10-20T15:06:46.512Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civtkm4gi0004wajxey2w2hyt","content":"<p>在Javascript中获取class的类型名主要有以下几种方法：</p>\n<ol>\n<li><p><code>Function.name</code><br>在JS中<code>class</code>的类型名是由<code>constructor</code>的函数名决定的，那么我们可以直接调用<code>constructor.name</code>获取到类型名，这个方法不管是对通过<code>new</code>新建的实例还是<code>class</code>对象都能适用</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Polygon</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>()&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.x = <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    say() &#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.constructor.name); <span class=\"comment\">//Polygon</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> Polygon();</div><div class=\"line\"><span class=\"built_in\">console</span>.log(p.constructor.name); <span class=\"comment\">//Polygon</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><code>class.name</code><br>由于<code>class</code>本质只是函数的一层包装，也就是跟我们以前使用构造函数写类本质是一样的，所以我们可以直接使用<code>class.name</code>获取到类型名，但是对使用<code>new</code>新建的实例没用：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Polygon</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>()&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(Polygon.name); <span class=\"comment\">//Polygon</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><code>toString</code>与正则表达式<br>因为现在<code>Function.name</code>还不是正式的标准，MDN不推荐在生产环境使用，详见<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/name\" target=\"_blank\" rel=\"external\">Function.name</a>，所以在较低的版本最好的办法是使用<code>Function.toString()</code>,然后使用正则表达式匹配在<code>function</code>后面的字符。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Polygon</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.x = <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Circle</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>() &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">var</span> nameFromToStringRegex = <span class=\"regexp\">/^function\\s?([^\\s(]*)/</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> funName = Polygon.toString().match(nameFromToStringRegex)[<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"built_in\">console</span>.log(funName); <span class=\"comment\">//Polygon</span></div><div class=\"line\"><span class=\"keyword\">var</span> className = Circle.constructor.toString().match(nameFromToStringRegex)[<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"built_in\">console</span>.log(className);</div></pre></td></tr></table></figure>\n</li>\n<li><p>通用的方法<br>适用与<code>function</code>与<code>class</code>的类名，函数名的获取。<br>摘自<a href=\"http://stackoverflow.com/questions/3178892/get-function-name-in-javascript\" target=\"_blank\" rel=\"external\">stackoverflow</a>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Gets the classname of an object or function if it can.  Otherwise returns the provided default.</div><div class=\"line\"> *</div><div class=\"line\"> * Getting the name of a function is not a standard feature, so while this will work in many</div><div class=\"line\"> * cases, it should not be relied upon except for informational messages (e.g. logging and Error</div><div class=\"line\"> * messages).</div><div class=\"line\"> *</div><div class=\"line\"> * @private</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">className</span>(<span class=\"params\">object, defaultName</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> nameFromToStringRegex = <span class=\"regexp\">/^function\\s?([^\\s(]*)/</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> result = <span class=\"string\">\"\"</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> object === <span class=\"string\">'function'</span>) &#123;</div><div class=\"line\">        result = object.name || object.toString().match(nameFromToStringRegex)[<span class=\"number\">1</span>];</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> object.constructor === <span class=\"string\">'function'</span>) &#123;</div><div class=\"line\">        result = className(object.constructor, defaultName);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> result || defaultName;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></li>\n</ol>\n","excerpt":"","more":"<p>在Javascript中获取class的类型名主要有以下几种方法：</p>\n<ol>\n<li><p><code>Function.name</code><br>在JS中<code>class</code>的类型名是由<code>constructor</code>的函数名决定的，那么我们可以直接调用<code>constructor.name</code>获取到类型名，这个方法不管是对通过<code>new</code>新建的实例还是<code>class</code>对象都能适用</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Polygon</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>()&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.x = <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    say() &#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.constructor.name); <span class=\"comment\">//Polygon</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> Polygon();</div><div class=\"line\"><span class=\"built_in\">console</span>.log(p.constructor.name); <span class=\"comment\">//Polygon</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><code>class.name</code><br>由于<code>class</code>本质只是函数的一层包装，也就是跟我们以前使用构造函数写类本质是一样的，所以我们可以直接使用<code>class.name</code>获取到类型名，但是对使用<code>new</code>新建的实例没用：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Polygon</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>()&#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(Polygon.name); <span class=\"comment\">//Polygon</span></div></pre></td></tr></table></figure>\n</li>\n<li><p><code>toString</code>与正则表达式<br>因为现在<code>Function.name</code>还不是正式的标准，MDN不推荐在生产环境使用，详见<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/name\">Function.name</a>，所以在较低的版本最好的办法是使用<code>Function.toString()</code>,然后使用正则表达式匹配在<code>function</code>后面的字符。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Polygon</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.x = <span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Circle</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>() &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">var</span> nameFromToStringRegex = <span class=\"regexp\">/^function\\s?([^\\s(]*)/</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> funName = Polygon.toString().match(nameFromToStringRegex)[<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"built_in\">console</span>.log(funName); <span class=\"comment\">//Polygon</span></div><div class=\"line\"><span class=\"keyword\">var</span> className = Circle.constructor.toString().match(nameFromToStringRegex)[<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"built_in\">console</span>.log(className);</div></pre></td></tr></table></figure>\n</li>\n<li><p>通用的方法<br>适用与<code>function</code>与<code>class</code>的类名，函数名的获取。<br>摘自<a href=\"http://stackoverflow.com/questions/3178892/get-function-name-in-javascript\">stackoverflow</a>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * Gets the classname of an object or function if it can.  Otherwise returns the provided default.</div><div class=\"line\"> *</div><div class=\"line\"> * Getting the name of a function is not a standard feature, so while this will work in many</div><div class=\"line\"> * cases, it should not be relied upon except for informational messages (e.g. logging and Error</div><div class=\"line\"> * messages).</div><div class=\"line\"> *</div><div class=\"line\"> * @private</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">className</span>(<span class=\"params\">object, defaultName</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> nameFromToStringRegex = <span class=\"regexp\">/^function\\s?([^\\s(]*)/</span>;</div><div class=\"line\">    <span class=\"keyword\">var</span> result = <span class=\"string\">\"\"</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> object === <span class=\"string\">'function'</span>) &#123;</div><div class=\"line\">        result = object.name || object.toString().match(nameFromToStringRegex)[<span class=\"number\">1</span>];</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> object.constructor === <span class=\"string\">'function'</span>) &#123;</div><div class=\"line\">        result = className(object.constructor, defaultName);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> result || defaultName;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"Linux环境下的Latex安装使用指南","date":"2016-11-17T08:58:55.000Z","_content":"## 安装\n1. 首先安装`TEX`的核心程序`texwrks`：\n`sudo apt-get install texworks`\n2. 安装完成后，你已经可以使用命令`texworks`打开默认的编辑器\n3. ","source":"_posts/latex-install-guide.md","raw":"---\ntitle: Linux环境下的Latex安装使用指南\ndate: 2016-11-17 16:58:55\ntags: latex\n---\n## 安装\n1. 首先安装`TEX`的核心程序`texwrks`：\n`sudo apt-get install texworks`\n2. 安装完成后，你已经可以使用命令`texworks`打开默认的编辑器\n3. ","slug":"latex-install-guide","published":1,"updated":"2016-11-17T12:08:27.759Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civtkm4gr0005wajxtbdicll8","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ol>\n<li>首先安装<code>TEX</code>的核心程序<code>texwrks</code>：<br><code>sudo apt-get install texworks</code></li>\n<li>安装完成后，你已经可以使用命令<code>texworks</code>打开默认的编辑器</li>\n<li></li>\n</ol>\n","excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ol>\n<li>首先安装<code>TEX</code>的核心程序<code>texwrks</code>：<br><code>sudo apt-get install texworks</code></li>\n<li>安装完成后，你已经可以使用命令<code>texworks</code>打开默认的编辑器</li>\n<li></li>\n</ol>\n"},{"title":"something-about-the-online-exam-system","date":"2016-10-13T09:18:49.000Z","_content":"","source":"_posts/something-about-the-online-exam-system.md","raw":"---\ntitle: something-about-the-online-exam-system\ndate: 2016-10-13 17:18:49\ntags:\n---","slug":"something-about-the-online-exam-system","published":1,"updated":"2016-10-20T15:06:46.512Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civtkm4gw0008wajx3y7gsv5h","content":"","excerpt":"","more":""},{"title":"Tensorflow 学习笔记","date":"2016-11-22T11:29:23.000Z","_content":"## 安装\n注意： 中文文档中所安装的版本已经过期，请使用[官方安装指南](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md)安装！\n文档地址(仅做内容参考，其中的下载地址均已过期或老旧)：[Tensorflow中文文档](http://www.tensorfly.cn/tfdoc/get_started/introduction.html)\n首先安装`pip`:\n```bash\nsudo apt-get install python-pip python-dev\n```\n由于国内下载`pip`上的软件包缓慢，所以使用国内源手动安装一部分：\n```bash\nsudo pip install --upgrade numpy -i http://pypi.doubanio.com/simple --trusted-host pypi.doubanio.com\n```\n然后使用以下命令安装`tensorflow`：\n```bash\nsudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl\n```\n\n安装完毕后测试是否可以正常使用，打开一个`python`终端：\n```python\n$ python\n\n>>> import tensorflow as tf\n>>> hello = tf.constant('Hello, TensorFlow!')\n>>> sess = tf.Session()\n>>> print sess.run(hello)\nHello, TensorFlow!\n>>> a = tf.constant(10)\n>>> b = tf.constant(32)\n>>> print sess.run(a+b)\n42\n>>>\n```\n至此，软件安装完毕，有任何问题可以查看[官方安装指南](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md),看是否有解决办法。\n\n## MNIST训练\n### 下载数据\n`Tensorflow`的代码仓库已经从 GoogleSource 迁移到了 [Github](https://github.com/tensorflow/tensorflow/tree/master/tensorflow),所以指南上提供的链接已经下载不了了。 \n\n我建议直接下载整个仓库，因为后面教程需要的所有代码也在里面，后面就不用再下了。\n\n克隆 TensorFlow 仓库:\n`git clone git@github.com:tensorflow/tensorflow.git`\n\n下载完毕后进入`tensorflow/examples/tutorials/mnist/`目录，这里存放着`MNIST`的所有代码。\n\n在当前目录创建`mymnist.py`文件，内容为：\n```python\nimport input_data\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\n```\n\n然后运行该文件，即会自动下载并解压数据。\n### 模型训练\n#### 准备工作\n阅读这段文字时，我会假设你已经完整的看了一遍\n[MNIST入门](http://www.tensorfly.cn/tfdoc/tutorials/mnist_beginners.html)\n，并将文章中的代码运行了一遍。以下是完整的'mymnist.py'代码：\n```python\nimport input_data\nimport tensorflow as tf\n\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\n\nx = tf.placeholder(\"float\", [None, 784])\nW = tf.Variable(tf.zeros([784, 10]))\nb = tf.Variable(tf.zeros([10]))\n\ny = tf.nn.softmax(tf.matmul(x, W) + b)\n\ny_ = tf.placeholder(\"float\", [None, 10])\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y))\ntrain_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\n\ninit = tf.initialize_all_variables()\nsess = tf.Session()\nsess.run(init)\n\nfor i in range(1000):\n  batch_xs, batch_ys = mnist.train.next_batch(100)\n  sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})\n\ncorrect_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\nprint sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})\n```\n运行后会得到一个`0.91`左右的输出。\n#### 数据集\n训练集里面的数据包括图片和标签，例如手写的图片`1`，和对应的标签`1`。训练集的图片是一个28x28的图片，这里我们将其转换为一维的向量数据。我默认认为数据是按照列的方式展开，即从上到下，从左到右展开。\n\n训练集的标签是一个10维向量，用来表示数字[0-9]，例如数字 2 ，就是([0,0,1,0,0,0,0,0,0,0])。\n#### Softmax回归\n>为了得到一张给定图片属于某个特定数字类的证据（evidence），我们对图片像素值进行加权求和。如果这个像素具有很强的证据说明这张图片不属于该类，那么相应的权值为负数，相反如果这个像素拥有有利的证据支持这张图片属于这个类，那么权值是正数。\n\n例如说`1`,中间有连续向下的像素则说明很可能不是`0`,不是`9`等。在实际的数据中则是：\n![图像-矩阵](http://www.tensorfly.cn/tfdoc/images/MNIST-Matrix.png)\n在图像二维矩阵中的第[8-10]行或者是其它任意行有连续的`1`，在我们展开后的训练集中则是有大量的连续的`1`。这个就是一个很强的证据说明这个图片是数字`1`。\n(待续...)\n## 问题\n1. `input_data.py` 无法使用\n当尝试运行`input_data.py`时提示错误信息：\n```python\nfrom tensorflow.contrib.learn.python.learn.datasets.mnist import read_data_sets ImportError: No module named contrib.learn.python.learn.datasets.mnist\n```\n原因是因为你安装的 Tensorflow 版本过于老旧，请下载最新版本。\n\n使用 `pip show tensorflow` 可以查看当前版本。具体安装方法请查看[官方安装指南](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md)或着本文章的安装部分，以官方为准。请先卸载旧版本（`sudo pip uninstall tensorflow`）再安装新版本。\n2. ","source":"_posts/tensorflow-learning-note.md","raw":"---\ntitle: Tensorflow 学习笔记\ndate: 2016-11-22 19:29:23\ntags: tensorflow\n---\n## 安装\n注意： 中文文档中所安装的版本已经过期，请使用[官方安装指南](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md)安装！\n文档地址(仅做内容参考，其中的下载地址均已过期或老旧)：[Tensorflow中文文档](http://www.tensorfly.cn/tfdoc/get_started/introduction.html)\n首先安装`pip`:\n```bash\nsudo apt-get install python-pip python-dev\n```\n由于国内下载`pip`上的软件包缓慢，所以使用国内源手动安装一部分：\n```bash\nsudo pip install --upgrade numpy -i http://pypi.doubanio.com/simple --trusted-host pypi.doubanio.com\n```\n然后使用以下命令安装`tensorflow`：\n```bash\nsudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl\n```\n\n安装完毕后测试是否可以正常使用，打开一个`python`终端：\n```python\n$ python\n\n>>> import tensorflow as tf\n>>> hello = tf.constant('Hello, TensorFlow!')\n>>> sess = tf.Session()\n>>> print sess.run(hello)\nHello, TensorFlow!\n>>> a = tf.constant(10)\n>>> b = tf.constant(32)\n>>> print sess.run(a+b)\n42\n>>>\n```\n至此，软件安装完毕，有任何问题可以查看[官方安装指南](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md),看是否有解决办法。\n\n## MNIST训练\n### 下载数据\n`Tensorflow`的代码仓库已经从 GoogleSource 迁移到了 [Github](https://github.com/tensorflow/tensorflow/tree/master/tensorflow),所以指南上提供的链接已经下载不了了。 \n\n我建议直接下载整个仓库，因为后面教程需要的所有代码也在里面，后面就不用再下了。\n\n克隆 TensorFlow 仓库:\n`git clone git@github.com:tensorflow/tensorflow.git`\n\n下载完毕后进入`tensorflow/examples/tutorials/mnist/`目录，这里存放着`MNIST`的所有代码。\n\n在当前目录创建`mymnist.py`文件，内容为：\n```python\nimport input_data\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\n```\n\n然后运行该文件，即会自动下载并解压数据。\n### 模型训练\n#### 准备工作\n阅读这段文字时，我会假设你已经完整的看了一遍\n[MNIST入门](http://www.tensorfly.cn/tfdoc/tutorials/mnist_beginners.html)\n，并将文章中的代码运行了一遍。以下是完整的'mymnist.py'代码：\n```python\nimport input_data\nimport tensorflow as tf\n\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\n\nx = tf.placeholder(\"float\", [None, 784])\nW = tf.Variable(tf.zeros([784, 10]))\nb = tf.Variable(tf.zeros([10]))\n\ny = tf.nn.softmax(tf.matmul(x, W) + b)\n\ny_ = tf.placeholder(\"float\", [None, 10])\ncross_entropy = -tf.reduce_sum(y_ * tf.log(y))\ntrain_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\n\ninit = tf.initialize_all_variables()\nsess = tf.Session()\nsess.run(init)\n\nfor i in range(1000):\n  batch_xs, batch_ys = mnist.train.next_batch(100)\n  sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})\n\ncorrect_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\nprint sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})\n```\n运行后会得到一个`0.91`左右的输出。\n#### 数据集\n训练集里面的数据包括图片和标签，例如手写的图片`1`，和对应的标签`1`。训练集的图片是一个28x28的图片，这里我们将其转换为一维的向量数据。我默认认为数据是按照列的方式展开，即从上到下，从左到右展开。\n\n训练集的标签是一个10维向量，用来表示数字[0-9]，例如数字 2 ，就是([0,0,1,0,0,0,0,0,0,0])。\n#### Softmax回归\n>为了得到一张给定图片属于某个特定数字类的证据（evidence），我们对图片像素值进行加权求和。如果这个像素具有很强的证据说明这张图片不属于该类，那么相应的权值为负数，相反如果这个像素拥有有利的证据支持这张图片属于这个类，那么权值是正数。\n\n例如说`1`,中间有连续向下的像素则说明很可能不是`0`,不是`9`等。在实际的数据中则是：\n![图像-矩阵](http://www.tensorfly.cn/tfdoc/images/MNIST-Matrix.png)\n在图像二维矩阵中的第[8-10]行或者是其它任意行有连续的`1`，在我们展开后的训练集中则是有大量的连续的`1`。这个就是一个很强的证据说明这个图片是数字`1`。\n(待续...)\n## 问题\n1. `input_data.py` 无法使用\n当尝试运行`input_data.py`时提示错误信息：\n```python\nfrom tensorflow.contrib.learn.python.learn.datasets.mnist import read_data_sets ImportError: No module named contrib.learn.python.learn.datasets.mnist\n```\n原因是因为你安装的 Tensorflow 版本过于老旧，请下载最新版本。\n\n使用 `pip show tensorflow` 可以查看当前版本。具体安装方法请查看[官方安装指南](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md)或着本文章的安装部分，以官方为准。请先卸载旧版本（`sudo pip uninstall tensorflow`）再安装新版本。\n2. ","slug":"tensorflow-learning-note","published":1,"updated":"2016-11-23T08:31:51.601Z","_id":"civtkm4h60009wajx0q44ak4z","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>注意： 中文文档中所安装的版本已经过期，请使用<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md\" target=\"_blank\" rel=\"external\">官方安装指南</a>安装！<br>文档地址(仅做内容参考，其中的下载地址均已过期或老旧)：<a href=\"http://www.tensorfly.cn/tfdoc/get_started/introduction.html\" target=\"_blank\" rel=\"external\">Tensorflow中文文档</a><br>首先安装<code>pip</code>:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install python-pip python-dev</div></pre></td></tr></table></figure></p>\n<p>由于国内下载<code>pip</code>上的软件包缓慢，所以使用国内源手动安装一部分：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo pip install --upgrade numpy -i http://pypi.doubanio.com/simple --trusted-host pypi.doubanio.com</div></pre></td></tr></table></figure></p>\n<p>然后使用以下命令安装<code>tensorflow</code>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl</div></pre></td></tr></table></figure></p>\n<p>安装完毕后测试是否可以正常使用，打开一个<code>python</code>终端：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ python</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>hello = tf.constant(<span class=\"string\">'Hello, TensorFlow!'</span>)</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>sess = tf.Session()</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> sess.run(hello)</div><div class=\"line\">Hello, TensorFlow!</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>a = tf.constant(<span class=\"number\">10</span>)</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>b = tf.constant(<span class=\"number\">32</span>)</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> sess.run(a+b)</div><div class=\"line\"><span class=\"number\">42</span></div><div class=\"line\">&gt;&gt;&gt;</div></pre></td></tr></table></figure></p>\n<p>至此，软件安装完毕，有任何问题可以查看<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md\" target=\"_blank\" rel=\"external\">官方安装指南</a>,看是否有解决办法。</p>\n<h2 id=\"MNIST训练\"><a href=\"#MNIST训练\" class=\"headerlink\" title=\"MNIST训练\"></a>MNIST训练</h2><h3 id=\"下载数据\"><a href=\"#下载数据\" class=\"headerlink\" title=\"下载数据\"></a>下载数据</h3><p><code>Tensorflow</code>的代码仓库已经从 GoogleSource 迁移到了 <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow\" target=\"_blank\" rel=\"external\">Github</a>,所以指南上提供的链接已经下载不了了。 </p>\n<p>我建议直接下载整个仓库，因为后面教程需要的所有代码也在里面，后面就不用再下了。</p>\n<p>克隆 TensorFlow 仓库:<br><code>git clone git@github.com:tensorflow/tensorflow.git</code></p>\n<p>下载完毕后进入<code>tensorflow/examples/tutorials/mnist/</code>目录，这里存放着<code>MNIST</code>的所有代码。</p>\n<p>在当前目录创建<code>mymnist.py</code>文件，内容为：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> input_data</div><div class=\"line\">mnist = input_data.read_data_sets(<span class=\"string\">\"MNIST_data/\"</span>, one_hot=<span class=\"keyword\">True</span>)</div></pre></td></tr></table></figure></p>\n<p>然后运行该文件，即会自动下载并解压数据。</p>\n<h3 id=\"模型训练\"><a href=\"#模型训练\" class=\"headerlink\" title=\"模型训练\"></a>模型训练</h3><h4 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h4><p>阅读这段文字时，我会假设你已经完整的看了一遍<br><a href=\"http://www.tensorfly.cn/tfdoc/tutorials/mnist_beginners.html\" target=\"_blank\" rel=\"external\">MNIST入门</a><br>，并将文章中的代码运行了一遍。以下是完整的’mymnist.py’代码：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> input_data</div><div class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</div><div class=\"line\"></div><div class=\"line\">mnist = input_data.read_data_sets(<span class=\"string\">\"MNIST_data/\"</span>, one_hot=<span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">x = tf.placeholder(<span class=\"string\">\"float\"</span>, [<span class=\"keyword\">None</span>, <span class=\"number\">784</span>])</div><div class=\"line\">W = tf.Variable(tf.zeros([<span class=\"number\">784</span>, <span class=\"number\">10</span>]))</div><div class=\"line\">b = tf.Variable(tf.zeros([<span class=\"number\">10</span>]))</div><div class=\"line\"></div><div class=\"line\">y = tf.nn.softmax(tf.matmul(x, W) + b)</div><div class=\"line\"></div><div class=\"line\">y_ = tf.placeholder(<span class=\"string\">\"float\"</span>, [<span class=\"keyword\">None</span>, <span class=\"number\">10</span>])</div><div class=\"line\">cross_entropy = -tf.reduce_sum(y_ * tf.log(y))</div><div class=\"line\">train_step = tf.train.GradientDescentOptimizer(<span class=\"number\">0.01</span>).minimize(cross_entropy)</div><div class=\"line\"></div><div class=\"line\">init = tf.initialize_all_variables()</div><div class=\"line\">sess = tf.Session()</div><div class=\"line\">sess.run(init)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1000</span>):</div><div class=\"line\">  batch_xs, batch_ys = mnist.train.next_batch(<span class=\"number\">100</span>)</div><div class=\"line\">  sess.run(train_step, feed_dict=&#123;x: batch_xs, y_: batch_ys&#125;)</div><div class=\"line\"></div><div class=\"line\">correct_prediction = tf.equal(tf.argmax(y,<span class=\"number\">1</span>), tf.argmax(y_,<span class=\"number\">1</span>))</div><div class=\"line\">accuracy = tf.reduce_mean(tf.cast(correct_prediction, <span class=\"string\">\"float\"</span>))</div><div class=\"line\"><span class=\"keyword\">print</span> sess.run(accuracy, feed_dict=&#123;x: mnist.test.images, y_: mnist.test.labels&#125;)</div></pre></td></tr></table></figure></p>\n<p>运行后会得到一个<code>0.91</code>左右的输出。</p>\n<h4 id=\"数据集\"><a href=\"#数据集\" class=\"headerlink\" title=\"数据集\"></a>数据集</h4><p>训练集里面的数据包括图片和标签，例如手写的图片<code>1</code>，和对应的标签<code>1</code>。训练集的图片是一个28x28的图片，这里我们将其转换为一维的向量数据。我默认认为数据是按照列的方式展开，即从上到下，从左到右展开。</p>\n<p>训练集的标签是一个10维向量，用来表示数字[0-9]，例如数字 2 ，就是([0,0,1,0,0,0,0,0,0,0])。</p>\n<h4 id=\"Softmax回归\"><a href=\"#Softmax回归\" class=\"headerlink\" title=\"Softmax回归\"></a>Softmax回归</h4><blockquote>\n<p>为了得到一张给定图片属于某个特定数字类的证据（evidence），我们对图片像素值进行加权求和。如果这个像素具有很强的证据说明这张图片不属于该类，那么相应的权值为负数，相反如果这个像素拥有有利的证据支持这张图片属于这个类，那么权值是正数。</p>\n</blockquote>\n<p>例如说<code>1</code>,中间有连续向下的像素则说明很可能不是<code>0</code>,不是<code>9</code>等。在实际的数据中则是：<br><img src=\"http://www.tensorfly.cn/tfdoc/images/MNIST-Matrix.png\" alt=\"图像-矩阵\"><br>在图像二维矩阵中的第[8-10]行或者是其它任意行有连续的<code>1</code>，在我们展开后的训练集中则是有大量的连续的<code>1</code>。这个就是一个很强的证据说明这个图片是数字<code>1</code>。<br>(待续…)</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><ol>\n<li><code>input_data.py</code> 无法使用<br>当尝试运行<code>input_data.py</code>时提示错误信息：<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> tensorflow.contrib.learn.python.learn.datasets.mnist <span class=\"keyword\">import</span> read_data_sets ImportError: No module named contrib.learn.python.learn.datasets.mnist</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>原因是因为你安装的 Tensorflow 版本过于老旧，请下载最新版本。</p>\n<p>使用 <code>pip show tensorflow</code> 可以查看当前版本。具体安装方法请查看<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md\" target=\"_blank\" rel=\"external\">官方安装指南</a>或着本文章的安装部分，以官方为准。请先卸载旧版本（<code>sudo pip uninstall tensorflow</code>）再安装新版本。<br>2. </p>\n","excerpt":"","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>注意： 中文文档中所安装的版本已经过期，请使用<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md\">官方安装指南</a>安装！<br>文档地址(仅做内容参考，其中的下载地址均已过期或老旧)：<a href=\"http://www.tensorfly.cn/tfdoc/get_started/introduction.html\">Tensorflow中文文档</a><br>首先安装<code>pip</code>:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install python-pip python-dev</div></pre></td></tr></table></figure></p>\n<p>由于国内下载<code>pip</code>上的软件包缓慢，所以使用国内源手动安装一部分：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo pip install --upgrade numpy -i http://pypi.doubanio.com/simple --trusted-host pypi.doubanio.com</div></pre></td></tr></table></figure></p>\n<p>然后使用以下命令安装<code>tensorflow</code>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl</div></pre></td></tr></table></figure></p>\n<p>安装完毕后测试是否可以正常使用，打开一个<code>python</code>终端：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ python</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>hello = tf.constant(<span class=\"string\">'Hello, TensorFlow!'</span>)</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>sess = tf.Session()</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> sess.run(hello)</div><div class=\"line\">Hello, TensorFlow!</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>a = tf.constant(<span class=\"number\">10</span>)</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>b = tf.constant(<span class=\"number\">32</span>)</div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> sess.run(a+b)</div><div class=\"line\"><span class=\"number\">42</span></div><div class=\"line\">&gt;&gt;&gt;</div></pre></td></tr></table></figure></p>\n<p>至此，软件安装完毕，有任何问题可以查看<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md\">官方安装指南</a>,看是否有解决办法。</p>\n<h2 id=\"MNIST训练\"><a href=\"#MNIST训练\" class=\"headerlink\" title=\"MNIST训练\"></a>MNIST训练</h2><h3 id=\"下载数据\"><a href=\"#下载数据\" class=\"headerlink\" title=\"下载数据\"></a>下载数据</h3><p><code>Tensorflow</code>的代码仓库已经从 GoogleSource 迁移到了 <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow\">Github</a>,所以指南上提供的链接已经下载不了了。 </p>\n<p>我建议直接下载整个仓库，因为后面教程需要的所有代码也在里面，后面就不用再下了。</p>\n<p>克隆 TensorFlow 仓库:<br><code>git clone git@github.com:tensorflow/tensorflow.git</code></p>\n<p>下载完毕后进入<code>tensorflow/examples/tutorials/mnist/</code>目录，这里存放着<code>MNIST</code>的所有代码。</p>\n<p>在当前目录创建<code>mymnist.py</code>文件，内容为：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> input_data</div><div class=\"line\">mnist = input_data.read_data_sets(<span class=\"string\">\"MNIST_data/\"</span>, one_hot=<span class=\"keyword\">True</span>)</div></pre></td></tr></table></figure></p>\n<p>然后运行该文件，即会自动下载并解压数据。</p>\n<h3 id=\"模型训练\"><a href=\"#模型训练\" class=\"headerlink\" title=\"模型训练\"></a>模型训练</h3><h4 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h4><p>阅读这段文字时，我会假设你已经完整的看了一遍<br><a href=\"http://www.tensorfly.cn/tfdoc/tutorials/mnist_beginners.html\">MNIST入门</a><br>，并将文章中的代码运行了一遍。以下是完整的’mymnist.py’代码：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> input_data</div><div class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</div><div class=\"line\"></div><div class=\"line\">mnist = input_data.read_data_sets(<span class=\"string\">\"MNIST_data/\"</span>, one_hot=<span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">x = tf.placeholder(<span class=\"string\">\"float\"</span>, [<span class=\"keyword\">None</span>, <span class=\"number\">784</span>])</div><div class=\"line\">W = tf.Variable(tf.zeros([<span class=\"number\">784</span>, <span class=\"number\">10</span>]))</div><div class=\"line\">b = tf.Variable(tf.zeros([<span class=\"number\">10</span>]))</div><div class=\"line\"></div><div class=\"line\">y = tf.nn.softmax(tf.matmul(x, W) + b)</div><div class=\"line\"></div><div class=\"line\">y_ = tf.placeholder(<span class=\"string\">\"float\"</span>, [<span class=\"keyword\">None</span>, <span class=\"number\">10</span>])</div><div class=\"line\">cross_entropy = -tf.reduce_sum(y_ * tf.log(y))</div><div class=\"line\">train_step = tf.train.GradientDescentOptimizer(<span class=\"number\">0.01</span>).minimize(cross_entropy)</div><div class=\"line\"></div><div class=\"line\">init = tf.initialize_all_variables()</div><div class=\"line\">sess = tf.Session()</div><div class=\"line\">sess.run(init)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1000</span>):</div><div class=\"line\">  batch_xs, batch_ys = mnist.train.next_batch(<span class=\"number\">100</span>)</div><div class=\"line\">  sess.run(train_step, feed_dict=&#123;x: batch_xs, y_: batch_ys&#125;)</div><div class=\"line\"></div><div class=\"line\">correct_prediction = tf.equal(tf.argmax(y,<span class=\"number\">1</span>), tf.argmax(y_,<span class=\"number\">1</span>))</div><div class=\"line\">accuracy = tf.reduce_mean(tf.cast(correct_prediction, <span class=\"string\">\"float\"</span>))</div><div class=\"line\"><span class=\"keyword\">print</span> sess.run(accuracy, feed_dict=&#123;x: mnist.test.images, y_: mnist.test.labels&#125;)</div></pre></td></tr></table></figure></p>\n<p>运行后会得到一个<code>0.91</code>左右的输出。</p>\n<h4 id=\"数据集\"><a href=\"#数据集\" class=\"headerlink\" title=\"数据集\"></a>数据集</h4><p>训练集里面的数据包括图片和标签，例如手写的图片<code>1</code>，和对应的标签<code>1</code>。训练集的图片是一个28x28的图片，这里我们将其转换为一维的向量数据。我默认认为数据是按照列的方式展开，即从上到下，从左到右展开。</p>\n<p>训练集的标签是一个10维向量，用来表示数字[0-9]，例如数字 2 ，就是([0,0,1,0,0,0,0,0,0,0])。</p>\n<h4 id=\"Softmax回归\"><a href=\"#Softmax回归\" class=\"headerlink\" title=\"Softmax回归\"></a>Softmax回归</h4><blockquote>\n<p>为了得到一张给定图片属于某个特定数字类的证据（evidence），我们对图片像素值进行加权求和。如果这个像素具有很强的证据说明这张图片不属于该类，那么相应的权值为负数，相反如果这个像素拥有有利的证据支持这张图片属于这个类，那么权值是正数。</p>\n</blockquote>\n<p>例如说<code>1</code>,中间有连续向下的像素则说明很可能不是<code>0</code>,不是<code>9</code>等。在实际的数据中则是：<br><img src=\"http://www.tensorfly.cn/tfdoc/images/MNIST-Matrix.png\" alt=\"图像-矩阵\"><br>在图像二维矩阵中的第[8-10]行或者是其它任意行有连续的<code>1</code>，在我们展开后的训练集中则是有大量的连续的<code>1</code>。这个就是一个很强的证据说明这个图片是数字<code>1</code>。<br>(待续…)</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><ol>\n<li><code>input_data.py</code> 无法使用<br>当尝试运行<code>input_data.py</code>时提示错误信息：<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> tensorflow.contrib.learn.python.learn.datasets.mnist <span class=\"keyword\">import</span> read_data_sets ImportError: No module named contrib.learn.python.learn.datasets.mnist</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>原因是因为你安装的 Tensorflow 版本过于老旧，请下载最新版本。</p>\n<p>使用 <code>pip show tensorflow</code> 可以查看当前版本。具体安装方法请查看<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md\">官方安装指南</a>或着本文章的安装部分，以官方为准。请先卸载旧版本（<code>sudo pip uninstall tensorflow</code>）再安装新版本。<br>2. </p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"civtkm4fr0000wajxr861zpgq","tag_id":"civtkm4ga0002wajx2ni95n8u","_id":"civtkm4gv0007wajxbbs923dj"},{"post_id":"civtkm4g30001wajxtdf4k0dl","tag_id":"civtkm4gt0006wajx4m0u9cwg","_id":"civtkm4he000bwajx867tf545"},{"post_id":"civtkm4gf0003wajxwv618iz7","tag_id":"civtkm4hd000awajxr0t9hzum","_id":"civtkm4hh000dwajxkh7m6chj"},{"post_id":"civtkm4gr0005wajxtbdicll8","tag_id":"civtkm4hf000cwajxxwj98yq2","_id":"civtkm4hi000fwajxn2lazv44"},{"post_id":"civtkm4h60009wajx0q44ak4z","tag_id":"civtkm4hi000ewajxs9g2q6pl","_id":"civtkm4hj000gwajxyat758b2"}],"Tag":[{"name":"game-enagine javascript","_id":"civtkm4ga0002wajx2ni95n8u"},{"name":"github page","_id":"civtkm4gt0006wajx4m0u9cwg"},{"name":"namecheap https ssl certificate website","_id":"civtkm4hd000awajxr0t9hzum"},{"name":"latex","_id":"civtkm4hf000cwajxxwj98yq2"},{"name":"tensorflow","_id":"civtkm4hi000ewajxs9g2q6pl"}]}}